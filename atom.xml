<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LXYu.♡</title>
  
  <subtitle>˙ ᵕ ˙</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-09-03T10:04:52.959Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>鲤小鱼</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue+vue-ueditor-wrap+秀米</title>
    <link href="http://yoursite.com/2020/09/03/xiumi/"/>
    <id>http://yoursite.com/2020/09/03/xiumi/</id>
    <published>2020-09-03T09:44:15.000Z</published>
    <updated>2020-09-03T10:04:52.959Z</updated>
    
    <content type="html"><![CDATA[<p>我们的项目中使用的是ueditor+秀米的富文本编辑器，github上的大神做了一个基于vue的ueditor的组件，能够实现双向数据绑定，可以不用费劲的getContent、setContent。就决定用这个组件 ——  <a href="https://github.com/HaoChuan9421/vue-ueditor-wrap" target="_blank" rel="noopener">vue-ueditor-wrap</a>    。so~  vue+vue-ueditor-wrap+秀米. 开始吧 ⤵︎</p><a id="more"></a><p><strong>一：去ueditor官网下载官方源码</strong> </p><ol><li><p><a href="https://ueditor.baidu.com/website/download.html" target="_blank" rel="noopener">https://ueditor.baidu.com/website/download.html</a></p></li><li><p>下载完成后，放到你的Vue项目里static下并命名为UEditor。</p></li></ol><p><strong>二：安装vue-ueditor-wrap</strong> </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vue-ueditor-wrap</span><br></pre></td></tr></table></figure><p><strong>三：引入并使用</strong> </p><ol><li><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// The Vue build version to load with the `import` command</span></span><br><span class="line"><span class="comment">// (runtime-only or standalone) has been set in webpack.base.conf with an alias.</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router'</span></span><br><span class="line"><span class="comment">// 引入ueditor的依赖文件</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'../static/UEditor/ueditor.config'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'../static/UEditor/ueditor.all.min.js'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'../static/UEditor/lang/zh-cn/zh-cn.js'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'../static/UEditor/ueditor.parse.min.js'</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  router,</span><br><span class="line">  components: &#123; App &#125;,</span><br><span class="line">  template: <span class="string">'&lt;App/&gt;'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>组件里</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"hello"</span>&gt;</span><br><span class="line">  &lt;!--数据绑定--&gt;</span><br><span class="line">    &lt;vue-ueditor-wrap v-model=<span class="string">"msg"</span> /&gt;</span><br><span class="line">    &lt;span&gt;&#123;&#123;msg&#125;&#125;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">import VueUeditorWrap from 'vue-ueditor-wrap' /</span><span class="regexp">/ 引入vue-ueditor-wrap</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  name: 'HelloWorld',</span></span><br><span class="line"><span class="regexp">  components: &#123;</span></span><br><span class="line"><span class="regexp">    VueUeditorWrap/</span><span class="regexp">/注册组件</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  data () &#123;</span></span><br><span class="line"><span class="regexp">    return &#123;</span></span><br><span class="line"><span class="regexp">      msg: 'Welcome to Your Vue.js App'</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>这些完成后，你就可以看到一个初始化好的<code>ueditor</code>了，并且可以很方便的绑定想要的数据 ?<br>接入<strong>秀米</strong>的童鞋继续向下看?</p><p><strong>四：在ueditor基础上接入秀米</strong></p><p>秀米提供：<a href="http://hgs.xiumi.us/uedit/" target="_blank" rel="noopener">秀米图文排版UEditor插件示例</a></p><ol><li><p>在你的index.html中引用 <code>http://xiumi.us/connect/ue/xiumi-ue-dialog-v5.js</code> 和 <code>http://xiumi.us/connect/ue/xiumi-ue-v5.css</code> 也可以下载文件后放在UEditor目录下引入本地文件，这样方便修改。（我是下载后引入本地的）如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"static/UEditor/xiumi-ue-v5.css"</span>&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> charset=<span class="string">"utf-8"</span> src=<span class="string">"static/UEditor/xiumi-ue-dialog-v5.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>下载文件 <code>http://xiumi.us/connect/ue/xiumi-ue-dialog-v5.html</code> 和 <code>http://hgs.xiumi.us/uedit/dialogs/internal.js</code> 放在你的UEditor目录下。</p></li><li><p>修改<code>UEditor</code>的配置（ueditor.config.js），第414行左右：将section:[] 改为section:[‘class’, ‘style’]，避免ueditor修改秀米的格式信息，造成排版错误。</p></li><li><p>在<code>xiumi-ue-dialog-v5.js</code>中把<code>iframeUrl</code>改为本地秀米H5的路径，如果你都是按照以上步骤进行那么路径将是<code>/static/UEditor/xiumi-ue-dialog-v5.html</code>，如果不是的话要按你自己的路径。</p></li></ol><p>到这里就是可以正常使用秀米并且有着双向数据绑定的ueditor啦。<br>图片上传相关功能需要后台小哥哥的协助。<br>其余与秀米的对接可以参考<a href="http://ent.xiumi.us/" target="_blank" rel="noopener">与秀米对接</a><br>还是有疑问的小盆友可以下载我上传的<a href="https://github.com/Yu-Lxy/vue-ueditor-wrap-xiumi" target="_blank" rel="noopener">demo</a>，希望可以帮助到你😜</p><p>这是接好后的样纸：<br><img src="/2020/09/03/xiumi/1599127298698.jpg" alt="秀米"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们的项目中使用的是ueditor+秀米的富文本编辑器，github上的大神做了一个基于vue的ueditor的组件，能够实现双向数据绑定，可以不用费劲的getContent、setContent。就决定用这个组件 ——  &lt;a href=&quot;https://github.com/HaoChuan9421/vue-ueditor-wrap&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;vue-ueditor-wrap&lt;/a&gt;    。so~  vue+vue-ueditor-wrap+秀米. 开始吧 ⤵︎&lt;/p&gt;
    
    </summary>
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建个人博客</title>
    <link href="http://yoursite.com/2019/03/01/buildHexo/"/>
    <id>http://yoursite.com/2019/03/01/buildHexo/</id>
    <published>2019-03-01T09:32:15.000Z</published>
    <updated>2019-03-09T13:05:21.499Z</updated>
    
    <content type="html"><![CDATA[<p>🤩第一次看到这种类型的博客简直不要太好看呀</p><p>后来试着搭起来才觉得不只是颜值高</p><p>功能也很nice</p><p>简单来说hexo就是一个静态页面生成和创建的工具</p><p>这篇教你打造一个具有自己风格的hexo博客 ❛˓◞˂̵✧</p><a id="more"></a><h3 id="我的搭建步骤有以下："><a href="#我的搭建步骤有以下：" class="headerlink" title="我的搭建步骤有以下："></a>我的搭建步骤有以下：</h3><ul><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li><li>GitHub创建个人仓库</li><li>生成SSH添加到GitHub</li><li>将hexo部署到GitHub</li></ul><h3 id="1-安装git和node"><a href="#1-安装git和node" class="headerlink" title="1.安装git和node"></a>1.安装git和node</h3><p>git和node是必备条件, 可以戳：<br><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰大神的git教程</a><br><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">下载node</a></p><h3 id="2-安装hexo"><a href="#2-安装hexo" class="headerlink" title="2.安装hexo"></a>2.安装hexo</h3><p>git和node安好之后，接下来就是安hexo了<br>1.可以先新建一个文件夹，例🌰:我的是myBlog<br>进到这个文件夹内，打开命令行<br>2.Windows的小伙伴可以直接用 <code>npm install -g hexo</code><br>mac的小伙伴需要用 <code>sudo npm install --unsafe-perm --verbose -g hexo</code><br>完成之后可以 <code>hexo -v</code> 查看hexo版本<br>3.接下来初始化hexo <code>hexo init</code><br>完成之后会在myBlog生成以下文件：</p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>node_modules：</td><td>是依赖包</td></tr><tr><td>public：</td><td>生成的静态文件，这个目录最终会发布到服务器</td></tr><tr><td>scaffolds：</td><td>命令生成文章等的模板</td></tr><tr><td>source：</td><td>编写的markdown文件，_drafts草稿文件，_posts发布的文章</td></tr><tr><td>themes：</td><td>主题</td></tr><tr><td>_config.yml：</td><td>整个博客的配置</td></tr><tr><td>package.json：</td><td>项目所需模块项目的配置信息</td></tr></tbody></table><p>我们正常使用，修改最多的源码是 <code>_config.yml</code> 文件，不管是博客的基础配置，还是模板，都是修改这个文件。<br><code>source</code> 是我们日常写文章要用的目录，是我们日常操作的文件夹。<br>如果要修改主题模板，就需要操作 <code>themes</code>.</p><p>4.接下来<br><code>hexo g</code><br><code>hexo s</code><br>就可以在本地 <code>http://localhost:4000</code> 预览了<br><code>ctrl+c</code> 或是 <code>control+c</code> 关闭本地服务</p><h3 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a>GitHub创建个人仓库</h3><p>没有github账号需要先注册一个哦<br>有账号就新建一个库：<br><img src="/2019/03/01/buildHexo/hexo1.jpg" alt="Create a new repository"><br>建一个和你的username一样名字的库，比如我的就是这样：<br><img src="/2019/03/01/buildHexo/hexo2.jpg" alt><br>点击create repository</p><h3 id="生成SSH添加到GitHub-mac"><a href="#生成SSH添加到GitHub-mac" class="headerlink" title="生成SSH添加到GitHub(mac)"></a>生成SSH添加到GitHub(mac)</h3><p>1.检查是否已经存在SSH Key<br>打开电脑终端，输入 <code>ls -al ~/.ssh</code><br>2.如果终端出现文件id_rsa.pub 或 id_dsa.pub，则表示该电脑已经存在SSH Key，此时可继续输入<br><code>cat ~/.ssh/id_rsa.pub</code><br>复制接下来显示出来的一大串内容<br>3.如果终端未出现id_rsa.pub 或 id_dsa.pub文件，表示该电脑还没有配置SSH Key，此时需要输<br><code>ssh-keygen -t rsa -C &quot;your_full_name@xxxxx.com&quot;</code><br>连续回车即可，也可能会让你输入密码，密码就是你的开机密码<br>创建完成后按照第二步操作复制就行啦<br>这时候去到GitHub的setting<img src="/2019/03/01/buildHexo/hexo3.jpg" alt><br>再点击SSH and GPG keys<img src="/2019/03/01/buildHexo/hexo4.jpg" alt><br>点击New SSH key之后吧你刚刚复制的一串key粘在这里面 点击Add SSH key就ok啦<br><img src="/2019/03/01/buildHexo/hexo5.jpg" alt></p><h3 id="将hexo部署到GitHub"><a href="#将hexo部署到GitHub" class="headerlink" title="将hexo部署到GitHub"></a>将hexo部署到GitHub</h3><p>完成这一步就可以把你的hexo部署到github上辣<br>1.首先在你的项目文件下找到 <code>_config.yml</code> 进去找到<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repo</span>: <span class="attribute">https</span>:<span class="comment">//github.com/YourgithubName/YourgithubName.github.io.git</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure></p><p>把这个地址改成你专属的，比如我的是：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">repo:</span> <span class="string">https:</span><span class="comment">//github.com/Yu-Lxy/Yu-Lxy.github.io</span></span><br></pre></td></tr></table></figure></p><p>*注：这里有个坑🕳，一定要在冒号后面加一个空格，不然 <code>hexo d</code> 的时候会没有反应</p><p>2.需要安装deploy-git,也就是部署的命令,这样你才能用命令部署到GitHub:<br><code>npm install hexo-deployer-git --save</code><br>3.然后<br><code>hexo g</code><br><code>hexo d</code><br>输入 <code>http://yourname.github.io</code> 就能看到你的hexo咯~😆</p><p></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;🤩第一次看到这种类型的博客简直不要太好看呀&lt;/p&gt;
&lt;p&gt;后来试着搭起来才觉得不只是颜值高&lt;/p&gt;
&lt;p&gt;功能也很nice&lt;/p&gt;
&lt;p&gt;简单来说hexo就是一个静态页面生成和创建的工具&lt;/p&gt;
&lt;p&gt;这篇教你打造一个具有自己风格的hexo博客 ❛˓◞˂̵✧&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
